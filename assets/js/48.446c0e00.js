(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{457:function(t,a,s){"use strict";s.r(a);var e=s(4),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"feature-engineering"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#feature-engineering"}},[t._v("#")]),t._v(" Feature engineering")]),t._v(" "),s("p",[t._v("Feature engineering refers to extracting a number of discriminative features from a single pixel timeseries or even\na time series of EO data tiles. These features then allow an expert rule-based decision approach to classify pixels, or\nto train a model using techniques such as random forest or neural networks for classification.")]),t._v(" "),s("p",[t._v("Concrete examples of such features include simple things such as the percentiles or standard deviation of a vegetation index or band value,\nthe mean value for given month, or more advanced cases such as phenological or texture information.")]),t._v(" "),s("p",[t._v("In general, data scientists like to explore the usefulness of a given feature set for a use case, or may even\ndefine new features. In some cases, the openEO processes will allow computing them, and in others, a 'user defined\nfunction' may be used to compute features that are not directly supported in openEO.")]),t._v(" "),s("p",[t._v("In this section, we will show how to combine openEO functionality into a basic feature engineering pipeline.")]),t._v(" "),s("h2",{attrs:{id:"data-preparation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#data-preparation"}},[t._v("#")]),t._v(" Data preparation")]),t._v(" "),s("p",[t._v('To correctly compute and use statistics over a timeseries, gap-free composites\nat fixed timesteps are necessary.\nThe goal of temporal aggregation is to create gap-free composites, at equidistant temporal intervals.\nIn the case of optical data, it is often cloudmasked before this step, which introduces a lot of gaps ("no-data" values).')]),t._v(" "),s("p",[t._v("For example, with the openEO Python client library:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create monthly composite")]),t._v("\ncomposite "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sentinel2_cube"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("aggregate_temporal_period"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n   period"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"month"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   reducer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mean"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Fill gaps with linear interpolation")]),t._v("\ninterpolated "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" composite"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apply_dimension"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n   dimension"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   process"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"array_interpolate_linear"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"computing-statistics-over-time"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#computing-statistics-over-time"}},[t._v("#")]),t._v(" Computing statistics over time")]),t._v(" "),s("p",[t._v("When computing statistics over time, the time dimension is fully reduced per band, and for each band, a number of statistics\ncan be computed.")]),t._v(" "),s("p",[t._v("In this example, we'll compute three quantiles, the mean and the standard deviation for each band.\nAfter computing the actual features, we also make sure to reset band names to meaningful values.")]),t._v(" "),s("p",[t._v("The effect of specifying "),s("code",[t._v("target_dimension='bands'")]),t._v(" is that the 'time' dimension is removed, and replaced by the 'bands'\ndimension.")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" openeo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processes "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ProcessBuilder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" array_concat\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compute_features")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input_timeseries"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ProcessBuilder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" array_concat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n       input_timeseries"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("quantiles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("probabilities"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("input_timeseries"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" input_timeseries"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nfeatures "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" interpolated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apply_dimension"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n   dimension"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   process"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("compute_features"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   target_dimension"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bands'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nnew_band_names "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n   band "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" stat\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" band "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" interpolated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("metadata"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("band_names\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" stat "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"p10"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"p50"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"p90"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mean"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sd"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nfeatures "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" features"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rename_labels"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bands'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" new_band_names"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Now, a complete datacube with features is available for further usage. To see a fully working example, you can check\nout "),s("a",{attrs:{href:"https://github.com/openEOPlatform/SRR2_notebooks/blob/main/UC3%20-%20Crop%20type%20feature%20engineering%20(rule-based).ipynb",target:"_blank",rel:"noopener noreferrer"}},[t._v("this notebook"),s("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);a.default=n.exports}}]);